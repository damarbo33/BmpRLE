#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I../../ExternalLibs/sqllite/src -I../../ExternalLibs/libjpeg/src/libjpeg -I../../ExternalLibs/UIObjects/src -I../../ExternalLibs/libvlc/sdk/include -I../../ExternalLibs/gumbo-parser-master/src -I../../ExternalLibs/zipUtils/zlib -I../../ExternalLibs/zipUtils/unzip -I../../ExternalLibs/curl-7.40.0-devel-mingw32/include -I../../ExternalLibs/sdl_ext/src -I../httpCurl/httpcurl/src -I../rijndael -I../httpCurl/httpcurl/src/jsoncpp-0.10.5/include -I../../ExternalLibs/tidy/include -IC:/Program\ Files\ \(x86\)/Codeblocks/CodeBlocks16/MinGW/include -IC:/Program\ Files\ \(x86\)/Codeblocks/SDL/libs/include -IC:/Program\ Files\ \(x86\)/Codeblocks/SDL/libs/include/SDL
CFLAGS = -DWIN -DWIN32
RESINC = 
LIBDIR = -L../../ExternalLibs/UIObjects/bin/Release -L../../ExternalLibs/zipUtils/bin/Release -L../../ExternalLibs/sqllite/bin/Release -L../../ExternalLibs/gumbo-parser-master/bin/Release -L../httpCurl/httpcurl/bin/Release -L../../ExternalLibs/curl-7.40.0-devel-mingw32/lib -L../../ExternalLibs/tidy/bin/Release -LC:/Program\ Files\ \(x86\)/Codeblocks/CodeBlocks16/MinGW/lib -LC:/Program\ Files\ \(x86\)/Codeblocks/SDL/libs/lib -LC:/Program\ Files\ \(x86\)/Codeblocks/SDL/libs/lib/x86
LIB = ../../ExternalLibs/libjpeg/bin/Release/libjpeg.a
LDFLAGS = -lUIObjects -lsdlgfx -lmingw32 -lSDLmain -lSDL -lSDL_mixer -lSDL_ttf -lSDL_image -lzipUtils -lhttpcurl -lcrypto -lcurl -lcurldll -lidn -lrtmp -lssh2 -lssh2dll -lssl -lz -lzdll -ltidy -lgumboParser -lws2_32

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = bin/Debug/BmpRLE

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/BmpRLE

OBJ_DEBUG = $(OBJDIR_DEBUG)/image565.o $(OBJDIR_DEBUG)/main.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/image565.o $(OBJDIR_RELEASE)/main.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d bin/Debug || mkdir -p bin/Debug
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)/image565.o: image565.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c image565.cpp -o $(OBJDIR_DEBUG)/image565.o

$(OBJDIR_DEBUG)/main.o: main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c main.cpp -o $(OBJDIR_DEBUG)/main.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	rm -rf bin/Debug
	rm -rf $(OBJDIR_DEBUG)

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/image565.o: image565.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c image565.cpp -o $(OBJDIR_RELEASE)/image565.o

$(OBJDIR_RELEASE)/main.o: main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.cpp -o $(OBJDIR_RELEASE)/main.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

